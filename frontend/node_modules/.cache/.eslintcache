[{"/Users/noahcox/Documents/Code/React/scheduling-app/src/index.js":"1","/Users/noahcox/Documents/Code/React/scheduling-app/src/App.js":"2","/Users/noahcox/Documents/Code/React/scheduling-app/src/BlockContainer.js":"3","/Users/noahcox/Documents/Code/React/scheduling-app/src/Block.js":"4","/Users/noahcox/Documents/Code/React/scheduling-app/src/Header.js":"5"},{"size":196,"mtime":1632684293920,"results":"6","hashOfConfig":"7"},{"size":1609,"mtime":1632768309223,"results":"8","hashOfConfig":"7"},{"size":311,"mtime":1632686705931,"results":"9","hashOfConfig":"7"},{"size":220,"mtime":1632686769810,"results":"10","hashOfConfig":"7"},{"size":550,"mtime":1632686641677,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"16cy0tj",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/noahcox/Documents/Code/React/scheduling-app/src/index.js",[],["24","25"],"/Users/noahcox/Documents/Code/React/scheduling-app/src/App.js",["26","27"],"import { useState, useEffect } from \"react\";\nimport BlockContainer from \"./BlockContainer\";\nimport Header from \"./Header\";\nimport \"./style.css\";\n\nfunction App() {\n  const [blocks, setBlocks] = useState([]);\n  const [currentDateInfo, setCurrentDateInfo] = useState({});\n\n  const monthStringConversions = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const monthDayConversions = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n  const populateDateInfo = () => {\n    //sets date info state (for header)\n    const now = new Date();\n    const day = now.getDate();\n    const month = now.getMonth();\n    const year = now.getFullYear();\n    setCurrentDateInfo({day, month:monthStringConversions[month], year});\n    //sets date block state (for calendar display)\n    let newDateBlocks = [];\n    for (let i = 1; i <= monthDayConversions[month]; i++) {\n      newDateBlocks.push({\n        id: i,\n        date: `${i}/${month}/${year}`,\n        colour: (i == day ? \"blue\" : \"white\"),\n      });\n    }\n    setBlocks([...blocks, ...newDateBlocks]);\n  }\n\n  useEffect(() => {\n    populateDateInfo();\n    fetch(\"http://localhost:8000/getactivities\", {\n      method: \"POST\",\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        user: \"Noah\",\n        date: \"03/07/2004\"\n      })\n    })\n        .then(response => console.log(response));\n\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header todayInfo={currentDateInfo}/>\n      <BlockContainer blocks={blocks} />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/noahcox/Documents/Code/React/scheduling-app/src/BlockContainer.js",[],"/Users/noahcox/Documents/Code/React/scheduling-app/src/Block.js",[],"/Users/noahcox/Documents/Code/React/scheduling-app/src/Header.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":26,"column":20,"nodeType":"34","messageId":"35","endLine":26,"endColumn":22},{"ruleId":"36","severity":1,"message":"37","line":44,"column":6,"nodeType":"38","endLine":44,"endColumn":8,"suggestions":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'populateDateInfo'. Either include it or remove the dependency array.","ArrayExpression",["42"],"no-global-assign","no-unsafe-negation",{"desc":"43","fix":"44"},"Update the dependencies array to be: [populateDateInfo]",{"range":"45","text":"46"},[1442,1444],"[populateDateInfo]"]