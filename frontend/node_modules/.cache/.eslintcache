[{"/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/index.js":"1","/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/App.js":"2","/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/BlockContainer.js":"3","/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/Header.js":"4","/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/Block.js":"5","/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/ExpandableList.js":"6","/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/Login.js":"7","/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/Register.js":"8","/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/Homepage.js":"9","/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/Context.js":"10"},{"size":196,"mtime":1632684293920,"results":"11","hashOfConfig":"12"},{"size":2550,"mtime":1633289034817,"results":"13","hashOfConfig":"12"},{"size":343,"mtime":1633188093163,"results":"14","hashOfConfig":"12"},{"size":528,"mtime":1633189544258,"results":"15","hashOfConfig":"12"},{"size":374,"mtime":1633188664123,"results":"16","hashOfConfig":"12"},{"size":910,"mtime":1633189752414,"results":"17","hashOfConfig":"12"},{"size":2134,"mtime":1633885560564,"results":"18","hashOfConfig":"12"},{"size":1795,"mtime":1633889378708,"results":"19","hashOfConfig":"12"},{"size":313,"mtime":1633204411225,"results":"20","hashOfConfig":"12"},{"size":91,"mtime":1633287241996,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"11r1aym",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},"/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/index.js",[],["48","49"],"/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/App.js",["50","51","52"],"import React, { useState, useEffect, createContext } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\n\nimport BlockContainer from \"./BlockContainer\";\nimport Header from \"./Header\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport Homepage from \"./Homepage\";\nimport { LoginContext } from \"./Context\";\nimport \"./style.css\";\n\nfunction App() {\n  const [blocks, setBlocks] = useState([]);\n  const [currentDateInfo, setCurrentDateInfo] = useState({});\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const monthStringConversions = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const monthDayConversions = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n  const populateDateInfo = async () => {\n    //sets date info state (for header)\n    const now = new Date();\n    const day = now.getDate();\n    const month = now.getMonth();\n    const year = now.getFullYear();\n    setCurrentDateInfo({day, month:monthStringConversions[month], year});\n    //sets date block state (for calendar display)\n    let newDateBlocks = [];\n    for (let i = 1; i <= monthDayConversions[month]; i++) {\n      const fullDate = `${i}/${month+1}/${year}`;\n      let activities = await fetchActivities(fullDate);\n      newDateBlocks.push({\n        id: i,\n        date: fullDate,\n        activities,\n        isToday: i === day\n      });\n    }\n    setBlocks([...blocks, ...newDateBlocks]);\n  }\n\n  const fetchActivities = async date => {\n    let response = await fetch(\"http://localhost:8000/getactivities\", {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ date })\n    });\n    let data = await response.json();\n    return data;\n  }\n\n  useEffect(() => {\n    populateDateInfo();\n  }, []);\n\n  return (\n    <div className=\"App\">    \n      <BrowserRouter>\n        <LoginContext.Provider value={{setIsAuthenticated}}>\n          <Switch>\n            <Route exact path=\"/register\">\n              <Register/>\n            </Route>\n            <Route exact path=\"/login\">\n              <Login/>\n            </Route>\n            <Route exact path=\"/\">\n              <Homepage/>\n            </Route>\n          </Switch>\n          <Route exact path=\"/calendar\">\n            <Header todayInfo={currentDateInfo}/>\n            <BlockContainer blocks={blocks}/>\n          </Route>\n        </LoginContext.Provider>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/BlockContainer.js",[],"/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/Header.js",[],"/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/Block.js",[],"/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/ExpandableList.js",[],"/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/Login.js",["53","54"],"import { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\"; \nimport { LoginContext } from \"./Context\"; \nimport \"./style.css\";\n\nconst Login = () => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const ctx = useContext(LoginContext);\n\n    const history = useHistory();\n\n    const checkAuthenticate = async (username, password) => {\n        let response = await fetch(\"http://localhost:8000/login\", {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ username, password })\n        });\n        let data = await response.json();\n        return data;\n    }\n\n    const onSubmit = async () => {\n        const authCheck = await checkAuthenticate(username, password);\n        if (authCheck.status == \"success\") {\n            ctx.setIsAuthenticated(true);\n            history.push(\"/calendar\");\n        } else if (authCheck.status == \"fail\") {\n            ctx.setIsAuthenticated(false);\n            alert(\"Login attempt failed\");\n        }\n    }\n\n    const pd = (e) => e.preventDefault();\n\n    return (\n        <LoginContext.Consumer>{(context) => {\n            return (\n                <div className=\"form-page\">\n                    <div className=\"form-container\">\n                        <h1>Login</h1>\n                        <form action=\"http://localhost:8000/login\" method=\"POST\" onSubmit={pd}>\n                            <label htmlFor=\"username\">Username:</label><br/>\n                            <input name=\"username\" className=\"input\" onChange={_ => setUsername(_.target.value)}/><br/>\n                            <label htmlFor=\"password\">Password:</label><br/>\n                            <input name=\"password\" className=\"input\" onChange={_ => setPassword(_.target.value)}/><br/>\n                            <input type=\"submit\" value=\"Login\" onClick={e => onSubmit()}/>\n                        </form>\n                    </div>\n                </div>\n            );\n        }}</LoginContext.Consumer>\n    );\n}\n\n\nexport default Login;","/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/Register.js",["55"],"import \"./style.css\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"; \n\nconst Register = () => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const history = useHistory();\n\n    const registerCheck = async () => {\n        let response = await fetch(\"http://localhost:8000/register\", {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ username, password })\n        });\n        let data = await response.json();\n        return data;\n    }\n\n    const onSubmit = async () => {\n        const response = await registerCheck();\n        if (response.status == \"User registered\") {\n            history.push(\"/login\");\n        } else {\n            alert(response.status);\n        }\n    }\n    \n    const pd = (e) => e.preventDefault();\n\n    return (\n        <div className=\"form-page\">\n            <div className=\"form-container\">\n                <h1>Register</h1>\n                <form action=\"http://localhost:8000/register\" method=\"POST\" onSubmit={pd}>\n                    <label htmlFor=\"registerUsername\">Username:</label><br/>\n                    <input onChange={_ => setUsername(_.target.value)} className=\"input\" type=\"text\" name=\"registerUsername\" id=\"register-username-input\"/><br/>\n                    <label htmlFor=\"registerPassword\">Password:</label><br/>\n                    <input onChange={_ => setPassword(_.target.value)} className=\"input\" type=\"text\" name=\"registerPassword\" id=\"register-password-input\"/><br/>\n                    <input type=\"submit\" value=\"Register\" onClick={onSubmit}/>\n                </form>\n            </div>\n        </div>\n    );\n}\n\n\n\n\nexport default Register;","/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/Homepage.js",["56","57"],"import Login from \"./Login\";\nimport Register from \"./Register\";\nimport \"./style.css\";\n\n\nconst Homepage = () => {\n    return (\n        <div className=\"homepage\">\n            <a href=\"/login\"><h1>Login</h1></a>\n            <a href=\"/register\"><h1>Register</h1></a>\n        </div>\n    );\n}\n\n\nexport default Homepage;","/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/Context.js",["58"],"import React, { createContext } from \"react\";\n\nexport const LoginContext = createContext();",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":38,"nodeType":"65","messageId":"66","endLine":1,"endColumn":51},{"ruleId":"63","severity":1,"message":"67","line":15,"column":10,"nodeType":"65","messageId":"66","endLine":15,"endColumn":25},{"ruleId":"68","severity":1,"message":"69","line":55,"column":6,"nodeType":"70","endLine":55,"endColumn":8,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":27,"column":30,"nodeType":"74","messageId":"75","endLine":27,"endColumn":32},{"ruleId":"72","severity":1,"message":"73","line":30,"column":37,"nodeType":"74","messageId":"75","endLine":30,"endColumn":39},{"ruleId":"72","severity":1,"message":"73","line":24,"column":29,"nodeType":"74","messageId":"75","endLine":24,"endColumn":31},{"ruleId":"63","severity":1,"message":"76","line":1,"column":8,"nodeType":"65","messageId":"66","endLine":1,"endColumn":13},{"ruleId":"63","severity":1,"message":"77","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":16},{"ruleId":"63","severity":1,"message":"78","line":1,"column":8,"nodeType":"65","messageId":"66","endLine":1,"endColumn":13},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'isAuthenticated' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'populateDateInfo'. Either include it or remove the dependency array.","ArrayExpression",["81"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Login' is defined but never used.","'Register' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [populateDateInfo]",{"range":"84","text":"85"},[1875,1877],"[populateDateInfo]"]