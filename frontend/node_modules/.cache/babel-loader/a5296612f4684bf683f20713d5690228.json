{"ast":null,"code":"var _jsxFileName = \"/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport BlockContainer from \"./BlockContainer\";\nimport Header from \"./Header\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport Homepage from \"./Homepage\";\nimport { LoginContext } from \"./Context\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentDateInfo, setCurrentDateInfo] = useState({});\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const monthStringConversions = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n  const populateDateInfo = async () => {\n    //sets date info state (for header)\n    const now = new Date();\n    const day = now.getDate();\n    const month = now.getMonth();\n    const year = now.getFullYear();\n    setCurrentDateInfo({\n      day,\n      month: monthStringConversions[month],\n      year\n    });\n  };\n\n  useEffect(() => {\n    populateDateInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(LoginContext.Provider, {\n        value: {\n          setIsAuthenticated\n        },\n        children: [/*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/register\",\n            children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/calendar\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            todayInfo: currentDateInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BlockContainer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"zwZDhadEyzh4a0lZgK0UB6a+7gI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/App.js"],"names":["React","useState","useEffect","createContext","BrowserRouter","Route","Switch","BlockContainer","Header","Login","Register","Homepage","LoginContext","App","currentDateInfo","setCurrentDateInfo","isAuthenticated","setIsAuthenticated","monthStringConversions","populateDateInfo","now","Date","day","getDate","month","getMonth","year","getFullYear"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAO,aAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACe,eAAD,EAAkBC,kBAAlB,IAAwChB,QAAQ,CAAC,KAAD,CAAtD;AAEA,QAAMiB,sBAAsB,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAA/B;;AAGA,QAAMC,gBAAgB,GAAG,YAAY;AACnC;AACA,UAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,UAAMC,GAAG,GAAGF,GAAG,CAACG,OAAJ,EAAZ;AACA,UAAMC,KAAK,GAAGJ,GAAG,CAACK,QAAJ,EAAd;AACA,UAAMC,IAAI,GAAGN,GAAG,CAACO,WAAJ,EAAb;AACAZ,IAAAA,kBAAkB,CAAC;AAACO,MAAAA,GAAD;AAAME,MAAAA,KAAK,EAACN,sBAAsB,CAACM,KAAD,CAAlC;AAA2CE,MAAAA;AAA3C,KAAD,CAAlB;AACD,GAPD;;AASAxB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,aAAD;AAAA,6BACE,QAAC,YAAD,CAAc,QAAd;AAAuB,QAAA,KAAK,EAAE;AAACF,UAAAA;AAAD,SAA9B;AAAA,gCACE,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,WAAlB;AAAA,mCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,QAAlB;AAAA,mCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,GAAlB;AAAA,mCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,WAAlB;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAEH;AAAnB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GA3CQD,G;;KAAAA,G;AA6CT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\n\nimport BlockContainer from \"./BlockContainer\";\nimport Header from \"./Header\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport Homepage from \"./Homepage\";\nimport { LoginContext } from \"./Context\";\nimport \"./style.css\";\n\nfunction App() {\n  const [currentDateInfo, setCurrentDateInfo] = useState({});\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const monthStringConversions = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n\n  const populateDateInfo = async () => {\n    //sets date info state (for header)\n    const now = new Date();\n    const day = now.getDate();\n    const month = now.getMonth();\n    const year = now.getFullYear();\n    setCurrentDateInfo({day, month:monthStringConversions[month], year});\n  }\n\n  useEffect(() => {\n    populateDateInfo();\n  }, []);\n\n  return (\n    <div className=\"App\">    \n      <BrowserRouter>\n        <LoginContext.Provider value={{setIsAuthenticated}}>\n          <Switch>\n            <Route exact path=\"/register\">\n              <Register/>\n            </Route>\n            <Route exact path=\"/login\">\n              <Login/>\n            </Route>\n            <Route exact path=\"/\">\n              <Homepage/>\n            </Route>\n          </Switch>\n          <Route exact path=\"/calendar\">\n            <Header todayInfo={currentDateInfo}/>\n            <BlockContainer/>\n          </Route>\n        </LoginContext.Provider>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}