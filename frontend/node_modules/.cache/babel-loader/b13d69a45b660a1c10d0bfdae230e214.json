{"ast":null,"code":"var _jsxFileName = \"/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/Register.js\",\n    _s = $RefreshSig$();\n\nimport \"./style.css\";\nimport React, { useState, useHistory } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n\n  const registerCheck = async () => {\n    let response = await fetch(\"http://localhost:8000/register\", {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    let data = await response.json();\n    return data;\n  };\n\n  const onSubmit = async () => {\n    const response = await registerCheck();\n\n    if (response.message == \"User registered\") {\n      history.push(\"/calendar\");\n    } else {\n      alert(response.message);\n    }\n  };\n\n  const pd = e => e.preventDefault();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"http://localhost:8000/register\",\n        method: \"POST\",\n        onSubmit: pd,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"registerUsername\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 72\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: _ => setUsername(_.target.value),\n          className: \"input\",\n          type: \"text\",\n          name: \"registerUsername\",\n          id: \"register-username-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 156\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"registerPassword\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 72\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: _ => setPassword(_.target.value),\n          className: \"input\",\n          type: \"text\",\n          name: \"registerPassword\",\n          id: \"register-password-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 156\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Register\",\n          onClick: onSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"/nE+1o6xRAtcM7F1DwdqQmRYBrw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/Register.js"],"names":["React","useState","useHistory","Register","username","setUsername","password","setPassword","history","registerCheck","response","fetch","method","mode","headers","body","JSON","stringify","data","json","onSubmit","message","push","alert","pd","e","preventDefault","_","target","value"],"mappings":";;;AAAA,OAAO,aAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMO,OAAO,GAAGN,UAAU,EAA1B;;AAEA,QAAMO,aAAa,GAAG,YAAY;AAC9B,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmC;AACzDC,MAAAA,MAAM,EAAE,MADiD;AAEzDC,MAAAA,IAAI,EAAE,MAFmD;AAGzDC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAHgD;AAIzDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEb,QAAAA,QAAF;AAAYE,QAAAA;AAAZ,OAAf;AAJmD,KAAnC,CAA1B;AAMA,QAAIY,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAAjB;AACA,WAAOD,IAAP;AACH,GATD;;AAWA,QAAME,QAAQ,GAAG,YAAY;AACzB,UAAMV,QAAQ,GAAG,MAAMD,aAAa,EAApC;;AACA,QAAIC,QAAQ,CAACW,OAAT,IAAoB,iBAAxB,EAA2C;AACvCb,MAAAA,OAAO,CAACc,IAAR,CAAa,WAAb;AACH,KAFD,MAEO;AACHC,MAAAA,KAAK,CAACb,QAAQ,CAACW,OAAV,CAAL;AACH;AACJ,GAPD;;AASA,QAAMG,EAAE,GAAIC,CAAD,IAAOA,CAAC,CAACC,cAAF,EAAlB;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,MAAM,EAAC,gCAAb;AAA8C,QAAA,MAAM,EAAC,MAArD;AAA4D,QAAA,QAAQ,EAAEF,EAAtE;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eACuD;AAAA;AAAA;AAAA;AAAA,gBADvD,eAEI;AAAO,UAAA,QAAQ,EAAEG,CAAC,IAAItB,WAAW,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjC;AAAmD,UAAA,SAAS,EAAC,OAA7D;AAAqE,UAAA,IAAI,EAAC,MAA1E;AAAiF,UAAA,IAAI,EAAC,kBAAtF;AAAyG,UAAA,EAAE,EAAC;AAA5G;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAE2I;AAAA;AAAA;AAAA;AAAA,gBAF3I,eAGI;AAAO,UAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAGuD;AAAA;AAAA;AAAA;AAAA,gBAHvD,eAII;AAAO,UAAA,QAAQ,EAAEF,CAAC,IAAIpB,WAAW,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjC;AAAmD,UAAA,SAAS,EAAC,OAA7D;AAAqE,UAAA,IAAI,EAAC,MAA1E;AAAiF,UAAA,IAAI,EAAC,kBAAtF;AAAyG,UAAA,EAAE,EAAC;AAA5G;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAI2I;AAAA;AAAA;AAAA;AAAA,gBAJ3I,eAKI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC,UAA3B;AAAsC,UAAA,OAAO,EAAET;AAA/C;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA1CD;;GAAMjB,Q;UAIcD,U;;;KAJdC,Q;AA+CN,eAAeA,QAAf","sourcesContent":["import \"./style.css\";\nimport React, { useState, useHistory } from \"react\";\n\nconst Register = () => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const history = useHistory();\n\n    const registerCheck = async () => {\n        let response = await fetch(\"http://localhost:8000/register\", {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ username, password })\n        });\n        let data = await response.json();\n        return data;\n    }\n\n    const onSubmit = async () => {\n        const response = await registerCheck();\n        if (response.message == \"User registered\") {\n            history.push(\"/calendar\");\n        } else {\n            alert(response.message);\n        }\n    }\n    \n    const pd = (e) => e.preventDefault();\n\n    return (\n        <div className=\"form-page\">\n            <div className=\"form-container\">\n                <h1>Register</h1>\n                <form action=\"http://localhost:8000/register\" method=\"POST\" onSubmit={pd}>\n                    <label htmlFor=\"registerUsername\">Username:</label><br/>\n                    <input onChange={_ => setUsername(_.target.value)} className=\"input\" type=\"text\" name=\"registerUsername\" id=\"register-username-input\"/><br/>\n                    <label htmlFor=\"registerPassword\">Password:</label><br/>\n                    <input onChange={_ => setPassword(_.target.value)} className=\"input\" type=\"text\" name=\"registerPassword\" id=\"register-password-input\"/><br/>\n                    <input type=\"submit\" value=\"Register\" onClick={onSubmit}/>\n                </form>\n            </div>\n        </div>\n    );\n}\n\n\n\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}