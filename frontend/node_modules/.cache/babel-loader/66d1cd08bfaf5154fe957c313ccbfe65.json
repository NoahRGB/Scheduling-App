{"ast":null,"code":"var _jsxFileName = \"/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/Login.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { LoginContext } from \"./Context\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const ctx = useContext(LoginContext);\n  const history = useHistory();\n\n  const checkAuthenticate = async (username, password) => {\n    let response = await fetch(\"http://localhost:8000/login\", {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    let data = await response.json();\n    return data;\n  };\n\n  const onSubmit = async () => {\n    const authCheck = await checkAuthenticate(username, password);\n    console.log(authCheck);\n\n    if (authCheck == \"success\") {\n      ctx.setIsAuthenticated(true);\n      history.push(\"/\");\n    } else if (authCheck == \"fail\") {\n      ctx.setIsAuthenticated(false);\n      alert(\"Login attempt failed\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(LoginContext.Consumer, {\n    value: context => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-page\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            action: \"http://localhost:8000/login\",\n            method: \"POST\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 72\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"username\",\n              className: \"input\",\n              onChange: _ => setUsername(_.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 115\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 72\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"password\",\n              className: \"input\",\n              onChange: _ => setPassword(_.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 115\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"a5w0STA89+/rqmlzOsAcAGSHMUw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/Login.js"],"names":["useState","useContext","useHistory","LoginContext","Login","username","setUsername","password","setPassword","ctx","history","checkAuthenticate","response","fetch","method","mode","headers","body","JSON","stringify","data","json","onSubmit","authCheck","console","log","setIsAuthenticated","push","alert","context","_","target","value"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\"; \nimport { LoginContext } from \"./Context\"; \nimport \"./style.css\";\n\nconst Login = () => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const ctx = useContext(LoginContext);\n\n    const history = useHistory();\n\n    const checkAuthenticate = async (username, password) => {\n        let response = await fetch(\"http://localhost:8000/login\", {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ username, password })\n        });\n        let data = await response.json();\n        return data;\n    }\n\n    const onSubmit = async () => {\n        const authCheck = await checkAuthenticate(username, password);\n        console.log(authCheck);\n        if (authCheck == \"success\") {\n            ctx.setIsAuthenticated(true);\n            history.push(\"/\");\n        } else if (authCheck == \"fail\") {\n            ctx.setIsAuthenticated(false);\n            alert(\"Login attempt failed\");\n        }\n    }\n\n    return (\n        <LoginContext.Consumer value={(context) => {\n            return (\n                <div className=\"login-page\">\n                    <div className=\"form-container\">\n                        <h1>Login</h1>\n                        <form action=\"http://localhost:8000/login\" method=\"POST\">\n                            <label htmlFor=\"username\">Username:</label><br/>\n                            <input name=\"username\" className=\"input\" onChange={_ => setUsername(_.target.value)}/><br/>\n                            <label htmlFor=\"password\">Password:</label><br/>\n                            <input name=\"password\" className=\"input\" onChange={_ => setPassword(_.target.value)}/><br/>\n                            <input type=\"submit\" value=\"Login\"/>\n                        </form>\n                    </div>\n                </div>\n            );\n        }}></LoginContext.Consumer>\n    );\n}\n\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}