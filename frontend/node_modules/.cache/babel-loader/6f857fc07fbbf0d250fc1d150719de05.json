{"ast":null,"code":"var _jsxFileName = \"/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport BlockContainer from \"./BlockContainer\";\nimport Header from \"./Header\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [blocks, setBlocks] = useState([]);\n  const [currentDateInfo, setCurrentDateInfo] = useState({});\n  const monthStringConversions = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const monthDayConversions = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n  const populateDateInfo = () => {\n    //sets date info state (for header)\n    const now = new Date();\n    const day = now.getDate();\n    const month = now.getMonth();\n    const year = now.getFullYear();\n    setCurrentDateInfo({\n      day,\n      month: monthStringConversions[month],\n      year\n    }); //sets date block state (for calendar display)\n\n    let newDateBlocks = [];\n\n    for (let i = 1; i <= monthDayConversions[month]; i++) {\n      newDateBlocks.push({\n        id: i,\n        date: `${i}/${month}/${year}`,\n        colour: i == day ? \"blue\" : \"white\"\n      });\n    }\n\n    setBlocks([...blocks, ...newDateBlocks]);\n  };\n\n  useEffect(() => {\n    populateDateInfo();\n    fetch(\"http://localhost:8000/getactivities\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        date: \"02/10/2021\"\n      })\n    }).then(response => response.json().then(data => console.log(data)));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      todayInfo: currentDateInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BlockContainer, {\n      blocks: blocks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RXr0W7c7etoTkHDnupK60aLaB/k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/App.js"],"names":["useState","useEffect","BlockContainer","Header","App","blocks","setBlocks","currentDateInfo","setCurrentDateInfo","monthStringConversions","monthDayConversions","populateDateInfo","now","Date","day","getDate","month","getMonth","year","getFullYear","newDateBlocks","i","push","id","date","colour","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,aAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAMS,sBAAsB,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAA/B;AACA,QAAMC,mBAAmB,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,CAA5B;;AAEA,QAAMC,gBAAgB,GAAG,MAAM;AAC7B;AACA,UAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,UAAMC,GAAG,GAAGF,GAAG,CAACG,OAAJ,EAAZ;AACA,UAAMC,KAAK,GAAGJ,GAAG,CAACK,QAAJ,EAAd;AACA,UAAMC,IAAI,GAAGN,GAAG,CAACO,WAAJ,EAAb;AACAX,IAAAA,kBAAkB,CAAC;AAACM,MAAAA,GAAD;AAAME,MAAAA,KAAK,EAACP,sBAAsB,CAACO,KAAD,CAAlC;AAA2CE,MAAAA;AAA3C,KAAD,CAAlB,CAN6B,CAO7B;;AACA,QAAIE,aAAa,GAAG,EAApB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIX,mBAAmB,CAACM,KAAD,CAAxC,EAAiDK,CAAC,EAAlD,EAAsD;AACpDD,MAAAA,aAAa,CAACE,IAAd,CAAmB;AACjBC,QAAAA,EAAE,EAAEF,CADa;AAEjBG,QAAAA,IAAI,EAAG,GAAEH,CAAE,IAAGL,KAAM,IAAGE,IAAK,EAFX;AAGjBO,QAAAA,MAAM,EAAGJ,CAAC,IAAIP,GAAL,GAAW,MAAX,GAAoB;AAHZ,OAAnB;AAKD;;AACDR,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAY,GAAGe,aAAf,CAAD,CAAT;AACD,GAjBD;;AAmBAnB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,gBAAgB;AAChBe,IAAAA,KAAK,CAAC,qCAAD,EAAwC;AAC3CC,MAAAA,MAAM,EAAE,MADmC;AAE3CC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFkC;AAG3CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBP,QAAAA,IAAI,EAAE;AADa,OAAf;AAHqC,KAAxC,CAAL,CAMGQ,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,GACjBF,IADiB,CACZG,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CADI,CANpB;AAUD,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAE5B;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAEF;AAAxB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA9CQD,G;;KAAAA,G;AAgDT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport BlockContainer from \"./BlockContainer\";\nimport Header from \"./Header\";\nimport \"./style.css\";\n\nfunction App() {\n  const [blocks, setBlocks] = useState([]);\n  const [currentDateInfo, setCurrentDateInfo] = useState({});\n\n  const monthStringConversions = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const monthDayConversions = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n  const populateDateInfo = () => {\n    //sets date info state (for header)\n    const now = new Date();\n    const day = now.getDate();\n    const month = now.getMonth();\n    const year = now.getFullYear();\n    setCurrentDateInfo({day, month:monthStringConversions[month], year});\n    //sets date block state (for calendar display)\n    let newDateBlocks = [];\n    for (let i = 1; i <= monthDayConversions[month]; i++) {\n      newDateBlocks.push({\n        id: i,\n        date: `${i}/${month}/${year}`,\n        colour: (i == day ? \"blue\" : \"white\"),\n      });\n    }\n    setBlocks([...blocks, ...newDateBlocks]);\n  }\n\n  useEffect(() => {\n    populateDateInfo();\n    fetch(\"http://localhost:8000/getactivities\", {\n      method: \"POST\",\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        date: \"02/10/2021\"\n      })\n    }).then(response => response.json()\n      .then(data => console.log(data))\n    );\n\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header todayInfo={currentDateInfo}/>\n      <BlockContainer blocks={blocks} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}