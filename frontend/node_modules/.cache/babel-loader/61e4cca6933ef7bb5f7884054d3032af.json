{"ast":null,"code":"var _jsxFileName = \"/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport BlockContainer from \"./BlockContainer\";\nimport Header from \"./Header\";\nimport LoginPage from \"./Login\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [blocks, setBlocks] = useState([]);\n  const [currentDateInfo, setCurrentDateInfo] = useState({});\n  const monthStringConversions = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const monthDayConversions = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n  const populateDateInfo = async () => {\n    //sets date info state (for header)\n    const now = new Date();\n    const day = now.getDate();\n    const month = now.getMonth();\n    const year = now.getFullYear();\n    setCurrentDateInfo({\n      day,\n      month: monthStringConversions[month],\n      year\n    }); //sets date block state (for calendar display)\n\n    let newDateBlocks = [];\n\n    for (let i = 1; i <= monthDayConversions[month]; i++) {\n      const fullDate = `${i}/${month + 1}/${year}`;\n      let activities = await fetchActivities(fullDate);\n      newDateBlocks.push({\n        id: i,\n        date: fullDate,\n        activities,\n        isToday: i === day\n      });\n    }\n\n    setBlocks([...blocks, ...newDateBlocks]);\n  };\n\n  const fetchActivities = async date => {\n    let response = await fetch(\"http://localhost:8000/getactivities\", {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        date\n      })\n    });\n    let data = await response.json();\n    return data;\n  };\n\n  useEffect(() => {\n    populateDateInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RXr0W7c7etoTkHDnupK60aLaB/k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/App.js"],"names":["useState","useEffect","BrowserRouter","Route","BlockContainer","Header","LoginPage","App","blocks","setBlocks","currentDateInfo","setCurrentDateInfo","monthStringConversions","monthDayConversions","populateDateInfo","now","Date","day","getDate","month","getMonth","year","getFullYear","newDateBlocks","i","fullDate","activities","fetchActivities","push","id","date","isToday","response","fetch","method","mode","headers","body","JSON","stringify","data","json"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\"\n\nimport BlockContainer from \"./BlockContainer\";\nimport Header from \"./Header\";\nimport LoginPage from \"./Login\";\nimport \"./style.css\";\n\nfunction App() {\n  const [blocks, setBlocks] = useState([]);\n  const [currentDateInfo, setCurrentDateInfo] = useState({});\n\n  const monthStringConversions = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const monthDayConversions = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n  const populateDateInfo = async () => {\n    //sets date info state (for header)\n    const now = new Date();\n    const day = now.getDate();\n    const month = now.getMonth();\n    const year = now.getFullYear();\n    setCurrentDateInfo({day, month:monthStringConversions[month], year});\n    //sets date block state (for calendar display)\n    let newDateBlocks = [];\n    for (let i = 1; i <= monthDayConversions[month]; i++) {\n      const fullDate = `${i}/${month+1}/${year}`;\n      let activities = await fetchActivities(fullDate);\n      newDateBlocks.push({\n        id: i,\n        date: fullDate,\n        activities,\n        isToday: i === day\n      });\n    }\n    setBlocks([...blocks, ...newDateBlocks]);\n  }\n\n  const fetchActivities = async date => {\n    let response = await fetch(\"http://localhost:8000/getactivities\", {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ date })\n    });\n    let data = await response.json();\n    return data;\n  }\n\n  useEffect(() => {\n    populateDateInfo();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <LoginPage/>\n        {/* <Header todayInfo={currentDateInfo}/> */}\n        {/* <BlockContainer blocks={blocks}/> */}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}