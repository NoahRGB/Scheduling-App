{"ast":null,"code":"var _jsxFileName = \"/Users/noahcox/Code/React/Scheduling-App/frontend/src/EventAdder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { LoginContext } from \"./Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EventAdder = () => {\n  _s();\n\n  const [newEvent, setNewEvent] = useState(\"\");\n\n  const addEvent = async event => {\n    let response = await fetch(\"http://localhost:8000/add-event\", {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        activity: event\n      })\n    });\n    let data = await response.json();\n    return data;\n  };\n\n  const onSubmit = async () => {\n    const authCheck = await addEvent(newEvent);\n\n    if (authCheck.status === \"success\") {\n      history.push(\"/calendar\");\n    } else if (authCheck.status === \"fail\") {\n      alert(\"Login attempt failed\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"http://localhost:8000/add-activity\",\n          method: \"POST\",\n          onSubmit: pd,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text\",\n            children: \"Event:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 61\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"text\",\n            className: \"input\",\n            onChange: _ => setUsername(_.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 107\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Login\",\n            onClick: e => onSubmit()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(EventAdder, \"GKfFQIHlgwhsd/7Dd6WD229b3ss=\");\n\n_c = EventAdder;\nexport default EventAdder;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventAdder\");","map":{"version":3,"sources":["/Users/noahcox/Code/React/Scheduling-App/frontend/src/EventAdder.js"],"names":["React","useState","useContext","LoginContext","EventAdder","newEvent","setNewEvent","addEvent","event","response","fetch","method","mode","headers","body","JSON","stringify","activity","data","json","onSubmit","authCheck","status","history","push","alert","pd","_","setUsername","target","value","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,YAAT,QAA6B,WAA7B;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMM,QAAQ,GAAG,MAAOC,KAAP,IAAiB;AAC9B,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAoC;AAC1DC,MAAAA,MAAM,EAAE,MADkD;AAE1DC,MAAAA,IAAI,EAAE,MAFoD;AAG1DC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAHiD;AAI1DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,QAAQ,EAAET;AAAZ,OAAf;AAJoD,KAApC,CAA1B;AAMA,QAAIU,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAT,EAAjB;AACA,WAAOD,IAAP;AACH,GATD;;AAWA,QAAME,QAAQ,GAAG,YAAY;AACzB,UAAMC,SAAS,GAAG,MAAMd,QAAQ,CAACF,QAAD,CAAhC;;AACA,QAAIgB,SAAS,CAACC,MAAV,KAAqB,SAAzB,EAAoC;AAChCC,MAAAA,OAAO,CAACC,IAAR,CAAa,WAAb;AACH,KAFD,MAEO,IAAIH,SAAS,CAACC,MAAV,KAAqB,MAAzB,EAAiC;AACpCG,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACH;AACJ,GAPD;;AASA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,MAAM,EAAC,oCAAb;AAAkD,UAAA,MAAM,EAAC,MAAzD;AAAgE,UAAA,QAAQ,EAAEC,EAA1E;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eACwC;AAAA;AAAA;AAAA;AAAA,kBADxC,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,SAAS,EAAC,OAA7B;AAAqC,YAAA,QAAQ,EAAEC,CAAC,IAAIC,WAAW,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV;AAA/D;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAEsF;AAAA;AAAA;AAAA;AAAA,kBAFtF,eAGI;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,KAAK,EAAC,OAA3B;AAAmC,YAAA,OAAO,EAAEC,CAAC,IAAIX,QAAQ;AAAzD;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAcH,CArCD;;GAAMhB,U;;KAAAA,U;AA0CN,eAAeA,UAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { LoginContext } from \"./Context\";\n\nconst EventAdder = () => {\n    const [newEvent, setNewEvent] = useState(\"\");\n\n    const addEvent = async (event) => {\n        let response = await fetch(\"http://localhost:8000/add-event\", {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ activity: event })\n        });\n        let data = await response.json();\n        return data;\n    }\n\n    const onSubmit = async () => {\n        const authCheck = await addEvent(newEvent);\n        if (authCheck.status === \"success\") {\n            history.push(\"/calendar\");\n        } else if (authCheck.status === \"fail\") {\n            alert(\"Login attempt failed\");\n        }\n    }\n\n    return (\n        <>\n            <div className=\"form-page\">\n                <div className=\"form-container\">\n                    <h1>Login</h1>\n                    <form action=\"http://localhost:8000/add-activity\" method=\"POST\" onSubmit={pd}>\n                        <label htmlFor=\"text\">Event:</label><br/>\n                        <input name=\"text\" className=\"input\" onChange={_ => setUsername(_.target.value)}/><br/>\n                        <input type=\"submit\" value=\"Login\" onClick={e => onSubmit()}/>\n                    </form>\n                </div>\n            </div>\n        </>\n    );\n}\n\n\n\n\nexport default EventAdder;"]},"metadata":{},"sourceType":"module"}