{"ast":null,"code":"var _jsxFileName = \"/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/BlockContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Block from \"./Block\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BlockContainer = ({\n  dateInfo\n}) => {\n  _s();\n\n  const [blocks, setBlocks] = useState([]);\n  const monthDayConversions = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  useEffect(() => {\n    console.log(\"Use effect\");\n    buildDateBlocks();\n  }, []);\n\n  const buildDateBlocks = async () => {\n    //sets date block state (for calendar display)\n    let newDateBlocks = [];\n\n    for (let i = 1; i <= monthDayConversions[dateInfo.month]; i++) {\n      const fullDate = `${i}/${dateInfo.month + 1}/${dateInfo.year}`;\n      let activities = await fetchActivities(fullDate);\n      newDateBlocks.push({\n        id: i,\n        date: fullDate,\n        activities,\n        isToday: i === dateInfo.day\n      });\n    }\n\n    setBlocks([...blocks, ...newDateBlocks]);\n  };\n\n  const fetchActivities = async date => {\n    let response = await fetch(\"http://localhost:8000/getactivities\", {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        date\n      })\n    });\n    let data = await response.json();\n    return data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"block-container\",\n    children: [console.log(blocks), blocks.map(block => /*#__PURE__*/_jsxDEV(Block, {\n      date: block.date,\n      activities: block.activities,\n      isToday: block.isToday\n    }, block.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BlockContainer, \"EnmQnMllSQUThE3/m+b9p1neh+g=\");\n\n_c = BlockContainer;\nexport default BlockContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlockContainer\");","map":{"version":3,"sources":["/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/BlockContainer.js"],"names":["React","useState","useEffect","Block","BlockContainer","dateInfo","blocks","setBlocks","monthDayConversions","console","log","buildDateBlocks","newDateBlocks","i","month","fullDate","year","activities","fetchActivities","push","id","date","isToday","day","response","fetch","method","mode","headers","body","JSON","stringify","data","json","map","block"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACrC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMO,mBAAmB,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,CAA5B;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAC,IAAAA,eAAe;AAClB,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMA,eAAe,GAAG,YAAY;AAChC;AACA,QAAIC,aAAa,GAAG,EAApB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIL,mBAAmB,CAACH,QAAQ,CAACS,KAAV,CAAxC,EAA0DD,CAAC,EAA3D,EAA+D;AAC3D,YAAME,QAAQ,GAAI,GAAEF,CAAE,IAAGR,QAAQ,CAACS,KAAT,GAAe,CAAE,IAAGT,QAAQ,CAACW,IAAK,EAA3D;AACA,UAAIC,UAAU,GAAG,MAAMC,eAAe,CAACH,QAAD,CAAtC;AACAH,MAAAA,aAAa,CAACO,IAAd,CAAmB;AACfC,QAAAA,EAAE,EAAEP,CADW;AAEfQ,QAAAA,IAAI,EAAEN,QAFS;AAGfE,QAAAA,UAHe;AAIfK,QAAAA,OAAO,EAAET,CAAC,KAAKR,QAAQ,CAACkB;AAJT,OAAnB;AAMH;;AACDhB,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAY,GAAGM,aAAf,CAAD,CAAT;AACH,GAdD;;AAgBA,QAAMM,eAAe,GAAG,MAAMG,IAAN,IAAc;AAClC,QAAIG,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAD,EAAwC;AAChEC,MAAAA,MAAM,EAAE,MADwD;AAEhEC,MAAAA,IAAI,EAAE,MAF0D;AAGhEC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAHuD;AAIhEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEV,QAAAA;AAAF,OAAf;AAJ0D,KAAxC,CAA1B;AAMA,QAAIW,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAAjB;AACA,WAAOD,IAAP;AACH,GATD;;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,eACKvB,OAAO,CAACC,GAAR,CAAYJ,MAAZ,CADL,EAEMA,MAAM,CAAC4B,GAAP,CAAWC,KAAK,iBACd,QAAC,KAAD;AAAsB,MAAA,IAAI,EAAEA,KAAK,CAACd,IAAlC;AAAwC,MAAA,UAAU,EAAEc,KAAK,CAAClB,UAA1D;AAAsE,MAAA,OAAO,EAAEkB,KAAK,CAACb;AAArF,OAAYa,KAAK,CAACf,EAAlB;AAAA;AAAA;AAAA;AAAA,YADF,CAFN;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA7CD;;GAAMhB,c;;KAAAA,c;AA+CN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Block from \"./Block\";\n\nconst BlockContainer = ({ dateInfo }) => {\n    const [blocks, setBlocks] = useState([]);\n\n    const monthDayConversions = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    useEffect(() => {\n        console.log(\"Use effect\")\n        buildDateBlocks();\n    }, []);\n\n    const buildDateBlocks = async () => {\n        //sets date block state (for calendar display)\n        let newDateBlocks = [];\n        for (let i = 1; i <= monthDayConversions[dateInfo.month]; i++) {\n            const fullDate = `${i}/${dateInfo.month+1}/${dateInfo.year}`;\n            let activities = await fetchActivities(fullDate);\n            newDateBlocks.push({\n                id: i,\n                date: fullDate,\n                activities,\n                isToday: i === dateInfo.day\n            });\n        }\n        setBlocks([...blocks, ...newDateBlocks]);\n    }\n\n    const fetchActivities = async date => {\n        let response = await fetch(\"http://localhost:8000/getactivities\", {\n          method: \"POST\",\n          mode: \"cors\",\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ date })\n        });\n        let data = await response.json();\n        return data;\n    }\n\n    return (\n        <div className=\"block-container\">\n            {console.log(blocks)}\n            { blocks.map(block =>\n                <Block key={block.id} date={block.date} activities={block.activities} isToday={block.isToday}/>\n            ) }\n        </div>\n    );\n}\n\nexport default BlockContainer;"]},"metadata":{},"sourceType":"module"}