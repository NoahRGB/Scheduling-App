{"ast":null,"code":"var _jsxFileName = \"/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/ExpandableList.js\",\n    _s = $RefreshSig$();\n\nimport \"./style.css\";\nimport expandIcon from \"./assets/expand.svg\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expansion = ({\n  items\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expansion\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Expansion;\n\nconst ExpandableList = ({\n  name,\n  listItems\n}) => {\n  _s();\n\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const toggleExpansion = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expandable-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"icon\",\n      src: expandIcon,\n      onClick: toggleExpansion()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), isExpanded && /*#__PURE__*/_jsxDEV(Expansion, {\n      items: listItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ExpandableList, \"FPNvbbHVlWWR4LKxxNntSxiIS38=\");\n\n_c2 = ExpandableList;\nexport default ExpandableList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Expansion\");\n$RefreshReg$(_c2, \"ExpandableList\");","map":{"version":3,"sources":["/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/ExpandableList.js"],"names":["useState","Expansion","items","map","item","ExpandableList","name","listItems","isExpanded","setIsExpanded","toggleExpansion","expandIcon"],"mappings":";;;AAAA,OAAO,aAAP;;AAEA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC7B,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI;AAAA,gBACMA,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACZ;AAAA,+BAAI;AAAA,oBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,cADF;AADN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAVD;;KAAMH,S;;AAYN,MAAMI,cAAc,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA0B;AAAA;;AAC7C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMU,eAAe,GAAG,MAAM;AAC1BD,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI;AAAA,gBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,GAAG,EAAEK,UAA3B;AAAuC,MAAA,OAAO,EAAED,eAAe;AAA/D;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGMF,UAAU,iBAAI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAED;AAAlB;AAAA;AAAA;AAAA;AAAA,YAHpB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAdD;;GAAMF,c;;MAAAA,c;AAiBN,eAAeA,cAAf","sourcesContent":["import \"./style.css\";\nimport expandIcon from \"./assets/expand.svg\";\nimport { useState } from \"react\";\n\nconst Expansion = ({ items }) => {\n    return (\n        <div className=\"expansion\">\n            <ul>\n                { items.map(item => \n                    <li><p>{item}</p></li>\n                ) }\n            </ul>\n        </div>\n    );\n}\n\nconst ExpandableList = ({ name, listItems }) =>  {\n    const [isExpanded, setIsExpanded] = useState(false);\n\n    const toggleExpansion = () => {\n        setIsExpanded(!isExpanded);\n    }\n\n    return (\n        <div className=\"expandable-list\">\n            <p>{name}</p>\n            <img className=\"icon\" src={expandIcon} onClick={toggleExpansion()}/>\n            { isExpanded && <Expansion items={listItems}/> } \n        </div>\n    );\n}\n\n\nexport default ExpandableList;"]},"metadata":{},"sourceType":"module"}