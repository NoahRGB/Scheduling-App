{"ast":null,"code":"var _jsxFileName = \"/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/Login.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { StartUseContext } from \"./Context\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    setIsAuthenticated\n  } = StartUseContext();\n  const history = useHistory();\n\n  const onSubmit = async () => {\n    const authCheck = await checkAuthenticate(username, password);\n    console.log(authCheck);\n\n    if (authCheck == \"success\") {\n      //setIsAuthenticated(true);\n      history.push(\"/\");\n    } else if (authCheck == \"fail\") {//setIsAuthenticated(false);\n      //alert(\"Login attempt failed\");\n    }\n  };\n\n  const checkAuthenticate = async (username, password) => {\n    let response = await fetch(\"http://localhost:8000/login\", {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    let data = await response.json();\n    return data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        action: \"http://localhost:8000/login\",\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 64\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"username\",\n          className: \"input\",\n          onChange: _ => setUsername(_.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 107\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 64\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          className: \"input\",\n          onChange: _ => setPassword(_.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 107\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"/nE+1o6xRAtcM7F1DwdqQmRYBrw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/Login.js"],"names":["useState","StartUseContext","useHistory","Login","username","setUsername","password","setPassword","setIsAuthenticated","history","onSubmit","authCheck","checkAuthenticate","console","log","push","response","fetch","method","mode","headers","body","JSON","stringify","data","json","_","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { StartUseContext } from \"./Context\";\nimport { useHistory } from \"react-router-dom\"; \nimport \"./style.css\";\n\nconst Login = () => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const { setIsAuthenticated } = StartUseContext();\n\n    const history = useHistory();\n\n    const onSubmit = async () => {\n        const authCheck = await checkAuthenticate(username, password);\n        console.log(authCheck);\n        if (authCheck == \"success\") {\n            //setIsAuthenticated(true);\n            history.push(\"/\");\n        } else if (authCheck == \"fail\") {\n            //setIsAuthenticated(false);\n            //alert(\"Login attempt failed\");\n        }\n    }\n\n    const checkAuthenticate = async (username, password) => {\n        let response = await fetch(\"http://localhost:8000/login\", {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ username, password })\n        });\n        let data = await response.json();\n        return data;\n    }\n\n    return (\n        <div className=\"login-page\">\n            <div className=\"form-container\">\n                <h1>Login</h1>\n                <form onSubmit={onSubmit} action=\"http://localhost:8000/login\" method=\"POST\">\n                    <label htmlFor=\"username\">Username:</label><br/>\n                    <input name=\"username\" className=\"input\" onChange={_ => setUsername(_.target.value)}/><br/>\n                    <label htmlFor=\"password\">Password:</label><br/>\n                    <input name=\"password\" className=\"input\" onChange={_ => setPassword(_.target.value)}/><br/>\n                    <input type=\"submit\" value=\"Login\"/>\n                </form>\n            </div>\n        </div>\n    );\n}\n\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}