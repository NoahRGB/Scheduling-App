{"ast":null,"code":"var _jsxFileName = \"/Users/noahcox/Documents/Code/React/scheduling-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport BlockContainer from \"./BlockContainer\";\nimport Header from \"./Header\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [blocks, setBlocks] = useState([]);\n  const [currentDateInfo, setCurrentDateInfo] = useState({});\n  const monthConversions = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  useEffect(() => {\n    //fill date blocks\n    const now = new Date();\n    const day = now.getDate();\n    const month = now.getMonth();\n    const year = now.getFullYear();\n    setCurrentDateInfo({\n      day,\n      month,\n      year\n    });\n\n    for (let i = 1; i < 30; i++) {\n      setBlocks([...blocks, {\n        id: i,\n        date: `${i}/${month}/${year}`,\n        isToday: i == day\n      }]);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      todayInfo: currentDateInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BlockContainer, {\n      blocks: blocks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RXr0W7c7etoTkHDnupK60aLaB/k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/noahcox/Documents/Code/React/scheduling-app/src/App.js"],"names":["useState","useEffect","BlockContainer","Header","App","blocks","setBlocks","currentDateInfo","setCurrentDateInfo","monthConversions","now","Date","day","getDate","month","getMonth","year","getFullYear","i","id","date","isToday"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,aAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAMS,gBAAgB,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAAzB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMS,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,UAAMC,GAAG,GAAGF,GAAG,CAACG,OAAJ,EAAZ;AACA,UAAMC,KAAK,GAAGJ,GAAG,CAACK,QAAJ,EAAd;AACA,UAAMC,IAAI,GAAGN,GAAG,CAACO,WAAJ,EAAb;AACAT,IAAAA,kBAAkB,CAAC;AAACI,MAAAA,GAAD;AAAME,MAAAA,KAAN;AAAaE,MAAAA;AAAb,KAAD,CAAlB;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BZ,MAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAY;AACpBc,QAAAA,EAAE,EAAED,CADgB;AAEpBE,QAAAA,IAAI,EAAG,GAAEF,CAAE,IAAGJ,KAAM,IAAGE,IAAK,EAFR;AAGpBK,QAAAA,OAAO,EAAEH,CAAC,IAAIN;AAHM,OAAZ,CAAD,CAAT;AAKD;AACF,GAdQ,EAcN,EAdM,CAAT;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAEL;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAEF;AAAxB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA5BQD,G;;KAAAA,G;AA8BT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport BlockContainer from \"./BlockContainer\";\nimport Header from \"./Header\";\nimport \"./style.css\";\n\nfunction App() {\n  const [blocks, setBlocks] = useState([]);\n  const [currentDateInfo, setCurrentDateInfo] = useState({});\n\n  const monthConversions = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n  useEffect(() => {\n    //fill date blocks\n    const now = new Date();\n    const day = now.getDate();\n    const month = now.getMonth();\n    const year = now.getFullYear();\n    setCurrentDateInfo({day, month, year});\n    for (let i = 1; i < 30; i++) {\n      setBlocks([...blocks, {\n        id: i,\n        date: `${i}/${month}/${year}`,\n        isToday: i == day,\n      }]);\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header todayInfo={currentDateInfo}/>\n      <BlockContainer blocks={blocks} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}