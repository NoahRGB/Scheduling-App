{"ast":null,"code":"var _jsxFileName = \"/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/Login.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { LoginContext } from \"./LoginContext\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n\n  const checkAuthenticate = async (username, password) => {\n    let response = await fetch(\"http://localhost:8000/login\", {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    let data = await response.json();\n    return data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(LoginContext.Consumer, {\n    value: context => {\n      const onSubmit = async () => {\n        const authCheck = await checkAuthenticate(username, password);\n        console.log(authCheck);\n\n        if (authCheck == \"success\") {\n          context.setIsAuthenticated(true);\n          history.push(\"/\");\n        } else if (authCheck == \"fail\") {\n          context.setIsAuthenticated(false);\n          alert(\"Login attempt failed\");\n        }\n      };\n\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        className: \"login-page\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            action: \"http://localhost:8000/login\",\n            method: \"POST\",\n            onSubmit: onSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 68\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"username\",\n              className: \"input\",\n              onChange: _ => setUsername(_.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 111\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 68\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"password\",\n              className: \"input\",\n              onChange: _ => setPassword(_.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 111\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"/nE+1o6xRAtcM7F1DwdqQmRYBrw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/Login.js"],"names":["useState","LoginContext","useHistory","Login","username","setUsername","password","setPassword","history","checkAuthenticate","response","fetch","method","mode","headers","body","JSON","stringify","data","json","context","onSubmit","authCheck","console","log","setIsAuthenticated","push","alert","_","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { LoginContext } from \"./LoginContext\";\nimport { useHistory } from \"react-router-dom\"; \nimport \"./style.css\";\n\nconst Login = () => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const history = useHistory();\n\n    const checkAuthenticate = async (username, password) => {\n        let response = await fetch(\"http://localhost:8000/login\", {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ username, password })\n        });\n        let data = await response.json();\n        return data;\n    }\n\n    return (\n        <LoginContext.Consumer value={(context) => {\n            const onSubmit = async () => {\n                const authCheck = await checkAuthenticate(username, password);\n                console.log(authCheck);\n                if (authCheck == \"success\") {\n                    context.setIsAuthenticated(true);\n                    history.push(\"/\");\n                } else if (authCheck == \"fail\") {\n                    context.setIsAuthenticated(false);\n                    alert(\"Login attempt failed\");\n                }\n            }\n\n            <div className=\"login-page\">\n                <div className=\"form-container\">\n                    <h1>Login</h1>\n                    <form action=\"http://localhost:8000/login\" method=\"POST\" onSubmit={onSubmit}>\n                        <label htmlFor=\"username\">Username:</label><br/>\n                        <input name=\"username\" className=\"input\" onChange={_ => setUsername(_.target.value)}/><br/>\n                        <label htmlFor=\"password\">Password:</label><br/>\n                        <input name=\"password\" className=\"input\" onChange={_ => setPassword(_.target.value)}/><br/>\n                        <input type=\"submit\" value=\"Login\"/>\n                    </form>\n                </div>\n            </div>\n        }}></LoginContext.Consumer>\n    );\n}\n\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}