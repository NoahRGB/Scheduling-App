{"ast":null,"code":"var _jsxFileName = \"/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/ExpandableList.js\";\nimport \"./style.css\";\nimport expandIcon from \"./assets/expand.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpandableList = ({\n  name,\n  listItems\n}) => {\n  const isExpanded = \"false\"; // this is a string so it can be used as a class\n\n  const expansionClasses = `expansion ${isExpanded}`;\n\n  const expand = () => {\n    isExpanded == \"false\" ? isExpanded = \"true\" : isExpanded = \"false\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expandable-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"icon\",\n      src: expandIcon,\n      onClick: expand()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: expansionClasses,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: listItems.map(listItem => {\n          /*#__PURE__*/\n          _jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: listItem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ExpandableList;\nexport default ExpandableList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpandableList\");","map":{"version":3,"sources":["/Users/noahcox/Documents/Code/React/Scheduling-App/frontend/src/ExpandableList.js"],"names":["ExpandableList","name","listItems","isExpanded","expansionClasses","expand","expandIcon","map","listItem"],"mappings":";AAAA,OAAO,aAAP;;;;AAIA,MAAMA,cAAc,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA0B;AAC7C,QAAMC,UAAU,GAAG,OAAnB,CAD6C,CACjB;;AAC5B,QAAMC,gBAAgB,GAAI,aAAYD,UAAW,EAAjD;;AACA,QAAME,MAAM,GAAG,MAAM;AACjBF,IAAAA,UAAU,IAAI,OAAd,GAAwBA,UAAU,GAAG,MAArC,GAA8CA,UAAU,GAAG,OAA3D;AAEH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI;AAAA,gBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,GAAG,EAAEK,UAA3B;AAAuC,MAAA,OAAO,EAAED,MAAM;AAAtD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAED,gBAAhB;AAAA,6BACI;AAAA,kBACMF,SAAS,CAACK,GAAV,CAAcC,QAAQ,IAAI;AACxB;AAAA;AAAA,mCAAI;AAAA,wBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA;AACH,SAFC;AADN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAtBD;;KAAMR,c;AAyBN,eAAeA,cAAf","sourcesContent":["import \"./style.css\";\nimport expandIcon from \"./assets/expand.svg\";\n\n\nconst ExpandableList = ({ name, listItems }) =>  {\n    const isExpanded = \"false\"; // this is a string so it can be used as a class\n    const expansionClasses = `expansion ${isExpanded}`;\n    const expand = () => {\n        isExpanded == \"false\" ? isExpanded = \"true\" : isExpanded = \"false\";\n\n    }\n\n    return (\n        <div className=\"expandable-list\">\n            <p>{name}</p>\n            <img className=\"icon\" src={expandIcon} onClick={expand()}/>\n            <div className={expansionClasses}>\n                <ul>\n                    { listItems.map(listItem => {\n                        <li><p>{listItem}</p></li>\n                    }) }\n                </ul>\n\n            </div>\n        </div>\n    );\n}\n\n\nexport default ExpandableList;"]},"metadata":{},"sourceType":"module"}